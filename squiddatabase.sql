-- MySQL Script generated by MySQL Workbench
-- Mon Jun 14 10:22:18 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema squid
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema squid
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `squid` DEFAULT CHARACTER SET utf8 ;
USE `squid` ;

-- -----------------------------------------------------
-- Table `squid`.`Logins`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `squid`.`Logins` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updateAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `passwordHash` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `squid`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `squid`.`Users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updateAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `userName` VARCHAR(200) NOT NULL,
  `Logins_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Logins_id`),
  INDEX `fk_Users_Logins_idx` (`Logins_id` ASC) VISIBLE,
  CONSTRAINT `fk_Users_Logins`
    FOREIGN KEY (`Logins_id`)
    REFERENCES `squid`.`Logins` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `squid`.`Foren`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `squid`.`Foren` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titel` VARCHAR(255) NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updateAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `isLiked` TINYINT(1) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `squid`.`Threads`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `squid`.`Threads` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updateAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `titel` VARCHAR(255) NULL,
  `content` VARCHAR(10000) NOT NULL,
  `Users_id` INT NOT NULL,
  `Foren_id` INT NOT NULL,
  `isLiked` TINYINT(1) NULL,
  PRIMARY KEY (`id`, `Users_id`, `Foren_id`),
  INDEX `fk_Threads_Users1_idx` (`Users_id` ASC) VISIBLE,
  INDEX `fk_Threads_Foren1_idx` (`Foren_id` ASC) VISIBLE,
  CONSTRAINT `fk_Threads_Users1`
    FOREIGN KEY (`Users_id`)
    REFERENCES `squid`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Threads_Foren1`
    FOREIGN KEY (`Foren_id`)
    REFERENCES `squid`.`Foren` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `squid`.`Statistiken`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `squid`.`Statistiken` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updateAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `numberThreads` INT NOT NULL,
  `numberComments` INT NULL,
  `numberContributions` INT NULL,
  `Foren_id` INT NOT NULL,
  `Threads_id` INT NOT NULL,
  `Threads_Users_id` INT NOT NULL,
  `Threads_Foren_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Foren_id`, `Threads_id`, `Threads_Users_id`, `Threads_Foren_id`),
  INDEX `fk_Statistiken_Foren1_idx` (`Foren_id` ASC) VISIBLE,
  INDEX `fk_Statistiken_Threads1_idx` (`Threads_id` ASC, `Threads_Users_id` ASC, `Threads_Foren_id` ASC) VISIBLE,
  CONSTRAINT `fk_Statistiken_Foren1`
    FOREIGN KEY (`Foren_id`)
    REFERENCES `squid`.`Foren` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Statistiken_Threads1`
    FOREIGN KEY (`Threads_id` , `Threads_Users_id` , `Threads_Foren_id`)
    REFERENCES `squid`.`Threads` (`id` , `Users_id` , `Foren_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `squid`.`Contributions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `squid`.`Contributions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updateAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `content` VARCHAR(10000) NULL,
  `Threads_id` INT NOT NULL,
  `Users_id` INT NOT NULL,
  `isLiked` TINYINT(1) NULL,
  PRIMARY KEY (`id`, `Threads_id`, `Users_id`),
  INDEX `fk_Contributions_Threads1_idx` (`Threads_id` ASC) VISIBLE,
  INDEX `fk_Contributions_Users1_idx` (`Users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Contributions_Threads1`
    FOREIGN KEY (`Threads_id`)
    REFERENCES `squid`.`Threads` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Contributions_Users1`
    FOREIGN KEY (`Users_id`)
    REFERENCES `squid`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `squid`.`SubscribedThreads`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `squid`.`SubscribedThreads` (
  `Threads_id` INT NOT NULL,
  `Users_id` INT NOT NULL,
  `read` TINYINT(1) NULL,
  `timeStamp` TIMESTAMP NULL,
  PRIMARY KEY (`Threads_id`, `Users_id`),
  INDEX `fk_Threads_has_Users_Users1_idx` (`Users_id` ASC) VISIBLE,
  INDEX `fk_Threads_has_Users_Threads1_idx` (`Threads_id` ASC) VISIBLE,
  CONSTRAINT `fk_Threads_has_Users_Threads1`
    FOREIGN KEY (`Threads_id`)
    REFERENCES `squid`.`Threads` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Threads_has_Users_Users1`
    FOREIGN KEY (`Users_id`)
    REFERENCES `squid`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `squid`.`SubscribedForen`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `squid`.`SubscribedForen` (
  `Users_id` INT NOT NULL,
  `Foren_id` INT NOT NULL,
  `read` TINYINT(1) NULL,
  `timeStamp` TIMESTAMP NULL,
  PRIMARY KEY (`Users_id`, `Foren_id`),
  INDEX `fk_Users_has_Foren_Foren1_idx` (`Foren_id` ASC) VISIBLE,
  INDEX `fk_Users_has_Foren_Users1_idx` (`Users_id` ASC) VISIBLE,
  CONSTRAINT `fk_Users_has_Foren_Users1`
    FOREIGN KEY (`Users_id`)
    REFERENCES `squid`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_Foren_Foren1`
    FOREIGN KEY (`Foren_id`)
    REFERENCES `squid`.`Foren` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `squid`.`Rate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `squid`.`Rate` (
  `Contributions_id` INT NOT NULL,
  `Users_id` INT NOT NULL,
  `rate` INT NOT NULL,
  PRIMARY KEY (`Contributions_id`, `Users_id`),
  INDEX `fk_Contributions_has_Users_Users1_idx` (`Users_id` ASC) VISIBLE,
  INDEX `fk_Contributions_has_Users_Contributions1_idx` (`Contributions_id` ASC) VISIBLE,
  CONSTRAINT `fk_Contributions_has_Users_Contributions1`
    FOREIGN KEY (`Contributions_id`)
    REFERENCES `squid`.`Contributions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Contributions_has_Users_Users1`
    FOREIGN KEY (`Users_id`)
    REFERENCES `squid`.`Users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
